/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.CustomerRole;

import Business.Customer.Customer;
import Business.EcoSystem;
import Business.FactoryOutlet.Factory;
import Business.Orders.HotelOrder;
import Business.Orders.HotelOrderDirectory;
import java.util.regex.Matcher;
import Business.Hotel.Hotel;
import Business.Orders.FactoryOrderDirectory;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Component;
import java.awt.Image;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import javax.swing.JSplitPane;

/**
 *
 * @author Swapnil
 */
public class CustomerOrderFactoryJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    EcoSystem ecosystem;
    private UserAccount userAccount;
    DefaultTableModel model;
    DefaultTableModel model1;
    Factory factory;
    private String selectedItem;
    private String selectedPrice;
    private String removeItem;
    private FactoryOrderDirectory orderDirectory;
    JSplitPane screen;

    /**
     * Creates new form CustomerSelectOrder
     */
    public CustomerOrderFactoryJPanel(JPanel userProcessContainer, UserAccount account, EcoSystem system, Factory factory, JSplitPane screen) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = account;
        this.factory = factory;
        this.screen = screen;
        ecosystem = system;
        model = new DefaultTableModel();
        model1 = new DefaultTableModel();
        menuTable.setModel(model);
        cartTable.setModel(model1);
        model.addColumn("Item");
        model.addColumn("Price");
        model1.addColumn("Item");
        model1.addColumn("Price");
        model1.addColumn("Quantity");
        restNameText.setText(factory.getName());
        orderDirectory = new FactoryOrderDirectory();
        
        showMenuTable();
        showCartTable();
        
    }

    public void showCartTable() {
        if (orderDirectory.getOrderList().size() > 0) {
            for (int i = 0; i < orderDirectory.getOrderList().size(); i++) {
                model1.addRow(new Object[]{
                    orderDirectory.getOrderList().get(i).getItem(),
                    orderDirectory.getOrderList().get(i).getPrice(),
                    orderDirectory.getOrderList().get(i).getQuantity()
                });
            }
        }
    }

    public void showMenuTable() {
        HashMap<String, String> menu = factory.getMenu();
        if (menu.size() > 0) {
            for (Map.Entry<String, String> e : menu.entrySet()) {
                model.addRow(new Object[]{
                    e.getKey(),
                    e.getValue()
                });
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBack = new javax.swing.JButton();
        restNameText = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        menuTable = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        itemText = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        quantityText = new javax.swing.JTextField();
        AddButton = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        cartTable = new javax.swing.JTable();
        removeFromListBtn = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        removeItemText = new javax.swing.JTextField();
        clearButton = new javax.swing.JButton();
        removeButton = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        placeButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(0, 108, 103));
        setForeground(new java.awt.Color(72, 72, 72));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnBack.setBackground(new java.awt.Color(127, 195, 126));
        btnBack.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnBack.setForeground(new java.awt.Color(51, 51, 51));
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 40, 98, -1));

        restNameText.setFont(new java.awt.Font("Rockwell", 1, 36)); // NOI18N
        restNameText.setForeground(new java.awt.Color(254, 254, 226));
        add(restNameText, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 20, 350, 50));

        jPanel1.setBackground(new java.awt.Color(254, 254, 226));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        menuTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Item", "Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(menuTable);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, 401, 115));

        jButton2.setBackground(new java.awt.Color(127, 195, 126));
        jButton2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jButton2.setForeground(new java.awt.Color(51, 51, 51));
        jButton2.setText("Add to List");
        jButton2.setAutoscrolls(true);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(161, 202, 145, 35));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(72, 72, 72));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel3.setText("Selected Item");
        jLabel3.setAutoscrolls(true);
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(91, 266, 97, -1));

        itemText.setEditable(false);
        itemText.setForeground(new java.awt.Color(72, 72, 72));
        jPanel1.add(itemText, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 263, 145, -1));

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(72, 72, 72));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel4.setText("Quantity");
        jLabel4.setAutoscrolls(true);
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(97, 300, 91, -1));

        quantityText.setForeground(new java.awt.Color(72, 72, 72));
        quantityText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quantityTextActionPerformed(evt);
            }
        });
        jPanel1.add(quantityText, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 297, 145, -1));

        AddButton.setBackground(new java.awt.Color(127, 195, 126));
        AddButton.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        AddButton.setForeground(new java.awt.Color(51, 51, 51));
        AddButton.setText("Add Item");
        AddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddButtonActionPerformed(evt);
            }
        });
        jPanel1.add(AddButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(159, 347, 143, 45));

        jLabel7.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(51, 51, 51));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Select Inventory");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 30, -1, -1));

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 100, 460, 420));

        jPanel2.setBackground(new java.awt.Color(254, 254, 226));

        cartTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Item", "Price", "Quantity"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(cartTable);

        removeFromListBtn.setBackground(new java.awt.Color(127, 195, 126));
        removeFromListBtn.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        removeFromListBtn.setForeground(new java.awt.Color(51, 51, 51));
        removeFromListBtn.setText("Remove from cart");
        removeFromListBtn.setAutoscrolls(true);
        removeFromListBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeFromListBtnActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(72, 72, 72));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel6.setText("Selected Item");
        jLabel6.setAutoscrolls(true);

        removeItemText.setEditable(false);
        removeItemText.setForeground(new java.awt.Color(72, 72, 72));

        clearButton.setBackground(new java.awt.Color(127, 195, 126));
        clearButton.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        clearButton.setForeground(new java.awt.Color(51, 51, 51));
        clearButton.setText("Clear Cart");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        removeButton.setBackground(new java.awt.Color(127, 195, 126));
        removeButton.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        removeButton.setForeground(new java.awt.Color(51, 51, 51));
        removeButton.setText("Remove");
        removeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeButtonActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(51, 51, 51));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Cart View");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(84, 84, 84)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(removeItemText, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(clearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(removeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(76, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(158, 158, 158))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(removeFromListBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(114, 114, 114))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(33, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(removeFromListBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(removeItemText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(clearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(removeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(57, 57, 57))
        );

        add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 100, 450, 420));

        jPanel3.setBackground(new java.awt.Color(254, 254, 226));

        placeButton.setBackground(new java.awt.Color(127, 195, 126));
        placeButton.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        placeButton.setForeground(new java.awt.Color(51, 51, 51));
        placeButton.setText("Place Order");
        placeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                placeButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(43, Short.MAX_VALUE)
                .addComponent(placeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(38, Short.MAX_VALUE)
                .addComponent(placeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33))
        );

        add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 540, 210, 110));
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        if(menuTable.getSelectedRow() >= 0){
             selectedItem = String.valueOf(model.getValueAt(menuTable.getSelectedRow(), 0));
            selectedPrice = String.valueOf(model.getValueAt(menuTable.getSelectedRow(), 1));
            itemText.setText(selectedItem);
        }else{
        JOptionPane.showMessageDialog(this, "Kindly select item from the item table","Error message", JOptionPane.ERROR_MESSAGE);
        return;
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void AddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddButtonActionPerformed
        // TODO add your handling code here:
        if(itemText.getText().isEmpty() ||  quantityText.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Kindly select item and add quantity","Error message", JOptionPane.ERROR_MESSAGE);
            return;
        }else if(!quantityText.getText().matches("^[0-9]+$")){
            JOptionPane.showMessageDialog(this, "Quantity can only be number","Error message", JOptionPane.ERROR_MESSAGE);
            return;
        }
        orderDirectory.createOrder(selectedItem, selectedPrice, quantityText.getText(), factory, userAccount);
        model1.addRow(new Object[]{
            selectedItem,
            selectedPrice,
            quantityText.getText()
        });
        itemText.setText("");        
        quantityText.setText("");
        JOptionPane.showMessageDialog(this, "Item added to cart");
        jPanel3.setVisible(true);
        
        
        
    }//GEN-LAST:event_AddButtonActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        CustomerHotelJPanel dm= new CustomerHotelJPanel(userProcessContainer, userAccount, ecosystem, screen);
//        userProcessContainer.add("manageNetworkJPanel",dm);
//        CardLayout layout=(CardLayout)userProcessContainer.getLayout();
//        layout.next(userProcessContainer);
        screen.setRightComponent(dm);
    }//GEN-LAST:event_btnBackActionPerformed

    private void removeFromListBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeFromListBtnActionPerformed
        // TODO add your handling code here:
        if(cartTable.getSelectedRow()>=0){
            removeItem = String.valueOf(model1.getValueAt(cartTable.getSelectedRow(), 0));
            removeItemText.setText(removeItem);
        }else{
        JOptionPane.showMessageDialog(this, "Kindly select item from the cart table","Error message", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_removeFromListBtnActionPerformed

    private void removeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeButtonActionPerformed
        // TODO add your handling code here:
        if(removeItemText.getText().isEmpty() || removeItem == null) {
            JOptionPane.showMessageDialog(this, "Kindly select item to remove","Error message", JOptionPane.ERROR_MESSAGE);
            return;
        }
        orderDirectory.deleteOrder(removeItem);
        for (int i = 0; i < cartTable.getRowCount(); i++) {
            if (((String) cartTable.getValueAt(i, 0)).equals(removeItem)) {
                model1.removeRow(i);
            }
        }
        removeItemText.setText("");
        JOptionPane.showMessageDialog(this, "Item removed successfully");
    }//GEN-LAST:event_removeButtonActionPerformed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        // TODO add your handling code here:
        orderDirectory.deleteOrderAll();
        for (int i = model1.getRowCount() - 1; i >= 0; i--) {
            model1.removeRow(i);
        }
        JOptionPane.showMessageDialog(this, "Items removed successfully");

    }//GEN-LAST:event_clearButtonActionPerformed
    
    public Customer findCustomer() {
        for(int i = 0; i < ecosystem.getCustomerDirectory().getCustomerList().size(); i ++) {
            if(ecosystem.getCustomerDirectory().getCustomerList().get(i).getAccountDetails().getUsername().equals(this.userAccount.getUsername())) {
                return ecosystem.getCustomerDirectory().getCustomerList().get(i);
            }
        }
        return null;
    }
    
    public void setOrderListRestaurant(Customer cust) {
        for(int i = 0; i < orderDirectory.getOrderList().size(); i ++) {
            System.out.println(orderDirectory.getOrderList().get(i));
            factory.getOrderList().add(orderDirectory.getOrderList().get(i));           
            cust.getFactoryOrderList().add(orderDirectory.getOrderList().get(i));
        }
        System.out.println(factory.getOrderList()+"_"+cust.gethotelorderList());
        factory.getOrders().put(String.valueOf(factory.getOrders().size()), orderDirectory.getOrderList());
        cust.getFactoryOrderDirectoryList().add(orderDirectory);       
        factory.getOrderDirectoryList().add(orderDirectory);
        System.out.println(cust.getHotelorderDirectoryList()+"_"+factory.getOrderDirectoryList());
    }
    
    
    private void placeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_placeButtonActionPerformed
        // TODO add your handling code here:
        Double Total = 0.0;
        Customer cust = findCustomer();
     //   if (commentText.getText() != null)
          //  orderDirectory.setComment(commentText.getText());
        setOrderListRestaurant(cust);
       // commentText.setText("");
        for (int i = model1.getRowCount() - 1; i >= 0; i--) {
            model1.removeRow(i);
        }
        for(int i = 0; i < orderDirectory.getOrderList().size(); i ++) {
            Total+= Double.parseDouble(orderDirectory.getOrderList().get(i).getQuantity()) * Double.parseDouble(orderDirectory.getOrderList().get(i).getPrice());
        }
        CustomerPaymentPanels mm = new CustomerPaymentPanels(screen, cust, Total, "We have received your food order. Will update you when it is out for delivery");
        screen.setRightComponent(mm);
    }//GEN-LAST:event_placeButtonActionPerformed

    private void quantityTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quantityTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_quantityTextActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddButton;
    private javax.swing.JButton btnBack;
    private javax.swing.JTable cartTable;
    private javax.swing.JButton clearButton;
    private javax.swing.JTextField itemText;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable menuTable;
    private javax.swing.JButton placeButton;
    private javax.swing.JTextField quantityText;
    private javax.swing.JButton removeButton;
    private javax.swing.JButton removeFromListBtn;
    private javax.swing.JTextField removeItemText;
    private javax.swing.JLabel restNameText;
    // End of variables declaration//GEN-END:variables
}

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.SystemAdminWorkArea;

import Business.EcoSystem;
import Business.Employee.Employee;
import Business.Grocery.Grocery;
import Business.GroceryManager.GroceryManager;
import Business.Role.GroceryRole;
import Business.Role.SystemAdminRole;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author raaga
 */
public class ManageGrocery extends javax.swing.JPanel {

    JPanel userProcessContainer;
//    EcoSystem ecosystem;
    private static EcoSystem ecosystem;
    DefaultTableModel model;

    /**
     * Creates new form ManageRestaurants
     */
    public ManageGrocery(JPanel userProcessContainer1, EcoSystem system) {
        initComponents();
        userProcessContainer = userProcessContainer1;
        ecosystem = system;
        model = new DefaultTableModel();
        restaurantList.setModel(model);
        model.addColumn("Name");
        model.addColumn("Manager");
        model.addColumn("Location");
        model.addColumn("Phone");
        model.addColumn("Network");
        

        showComboBoxesList();
        showDeleteList();
        viewGroceryList();
    }

    public void viewGroceryList() {
        if (ecosystem.getGroceryDirectory().getGroceryList().size() > 0) {
            for (int i = 0; i < ecosystem.getGroceryDirectory().getGroceryList().size(); i++) {
                model.addRow(new Object[]{
                    ecosystem.getGroceryDirectory().getGroceryList().get(i).getName(),
                    ecosystem.getGroceryDirectory().getGroceryList().get(i).getManagerDetails().getName(),
                    ecosystem.getGroceryDirectory().getGroceryList().get(i).getLocation(),
                    ecosystem.getGroceryDirectory().getGroceryList().get(i).getPhone(),
                    ecosystem.getGroceryDirectory().getGroceryList().get(i).getNetwork()
                });
            }
        }
    }

    public void showDeleteList() {
        for (int i = 0; i < ecosystem.getGroceryDirectory().getGroceryList().size(); i++) {
            restListCombo.addItem(ecosystem.getGroceryDirectory().getGroceryList().get(i).getName());
            updateRestListCombo.addItem(ecosystem.getGroceryDirectory().getGroceryList().get(i).getName());

        }
    }

    public void showComboBoxesList() {
        for (int i = 0; i < ecosystem.getGroceryManagerDirectory().getGroceryManagerList().size(); i++) {
            managerListCombo.addItem(ecosystem.getGroceryManagerDirectory().getGroceryManagerList().get(i).getName());
            updateManagerListCombo.addItem(ecosystem.getGroceryManagerDirectory().getGroceryManagerList().get(i).getName());
        }
    }
    
    public void resetUpdate() {
        updateRestListCombo.setSelectedIndex(0);        
        updateManagerListCombo.setSelectedIndex(0);

        updateLocationText.setText("");
        updatePhoneText.setText("");
        updateRestNameText.setText("");
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        restNameLabel = new javax.swing.JLabel();
        restNameText = new javax.swing.JTextField();
        addRestButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        deleteRestLabel = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        deleteRestButton = new javax.swing.JButton();
        restListCombo = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        restaurantList = new javax.swing.JTable();
        btnBack = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        selectManagerLabel = new javax.swing.JLabel();
        updateRestListCombo = new javax.swing.JComboBox<>();
        updateRestManagerLabel = new javax.swing.JLabel();
        updateBtn = new javax.swing.JButton();
        restNameLabel1 = new javax.swing.JLabel();
        updateRestNameText = new javax.swing.JTextField();
        updateManagerListCombo = new javax.swing.JComboBox<>();
        updateRestManagerLabel1 = new javax.swing.JLabel();
        managerListCombo = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        locationText = new javax.swing.JTextField();
        phoneText = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        updatePhoneText = new javax.swing.JTextField();
        updateLocationText = new javax.swing.JTextField();
        title = new javax.swing.JLabel();

        setBackground(new java.awt.Color(0, 108, 103));
        setForeground(new java.awt.Color(254, 254, 226));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(254, 254, 226));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Add a Grocery");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 130, 159, 21));

        restNameLabel.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        restNameLabel.setForeground(new java.awt.Color(254, 254, 226));
        restNameLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        restNameLabel.setText("Name");
        add(restNameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 170, 73, -1));

        restNameText.setForeground(new java.awt.Color(72, 72, 72));
        restNameText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                restNameTextActionPerformed(evt);
            }
        });
        add(restNameText, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 170, 145, -1));

        addRestButton.setBackground(new java.awt.Color(127, 195, 126));
        addRestButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        addRestButton.setForeground(new java.awt.Color(51, 51, 51));
        addRestButton.setText("Add ");
        addRestButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addRestButtonActionPerformed(evt);
            }
        });
        add(addRestButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 310, 133, -1));

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(254, 254, 226));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Delete a Grocery");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1040, 140, 290, -1));

        deleteRestLabel.setForeground(new java.awt.Color(254, 254, 226));
        deleteRestLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        deleteRestLabel.setText("Name");
        add(deleteRestLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 180, 52, -1));

        jLabel4.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(254, 254, 226));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("View Items");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 410, 244, 24));

        deleteRestButton.setBackground(new java.awt.Color(127, 195, 126));
        deleteRestButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        deleteRestButton.setForeground(new java.awt.Color(51, 51, 51));
        deleteRestButton.setText("Delete");
        deleteRestButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteRestButtonActionPerformed(evt);
            }
        });
        add(deleteRestButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(1120, 220, 133, 30));

        restListCombo.setForeground(new java.awt.Color(72, 72, 72));
        restListCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None" }));
        restListCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                restListComboActionPerformed(evt);
            }
        });
        add(restListCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(1100, 180, 164, -1));

        restaurantList.setBackground(new java.awt.Color(254, 254, 226));
        restaurantList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Manager", "Location", "Phone"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(restaurantList);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 450, 540, 188));

        btnBack.setBackground(new java.awt.Color(127, 195, 126));
        btnBack.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnBack.setForeground(new java.awt.Color(51, 51, 51));
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 80, 133, -1));

        jLabel5.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(254, 254, 226));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Update Grocery");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 130, 199, -1));

        selectManagerLabel.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        selectManagerLabel.setForeground(new java.awt.Color(254, 254, 226));
        selectManagerLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        selectManagerLabel.setText("Select Grocery");
        add(selectManagerLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 170, 105, -1));

        updateRestListCombo.setForeground(new java.awt.Color(72, 72, 72));
        updateRestListCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None" }));
        updateRestListCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateRestListComboActionPerformed(evt);
            }
        });
        add(updateRestListCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 160, 145, 30));

        updateRestManagerLabel.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        updateRestManagerLabel.setForeground(new java.awt.Color(254, 254, 226));
        updateRestManagerLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        updateRestManagerLabel.setText("Manager Name");
        add(updateRestManagerLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 230, 129, -1));

        updateBtn.setBackground(new java.awt.Color(127, 195, 126));
        updateBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        updateBtn.setForeground(new java.awt.Color(51, 51, 51));
        updateBtn.setText("Update");
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });
        add(updateBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 330, 133, -1));

        restNameLabel1.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        restNameLabel1.setForeground(new java.awt.Color(254, 254, 226));
        restNameLabel1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        restNameLabel1.setText("Name");
        add(restNameLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 200, 73, -1));

        updateRestNameText.setForeground(new java.awt.Color(72, 72, 72));
        updateRestNameText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateRestNameTextActionPerformed(evt);
            }
        });
        add(updateRestNameText, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 200, 145, -1));

        updateManagerListCombo.setForeground(new java.awt.Color(72, 72, 72));
        updateManagerListCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None" }));
        updateManagerListCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateManagerListComboActionPerformed(evt);
            }
        });
        add(updateManagerListCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 230, 145, -1));

        updateRestManagerLabel1.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        updateRestManagerLabel1.setForeground(new java.awt.Color(254, 254, 226));
        updateRestManagerLabel1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        updateRestManagerLabel1.setText("Manager Name");
        add(updateRestManagerLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 200, 137, 14));

        managerListCombo.setForeground(new java.awt.Color(72, 72, 72));
        managerListCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None" }));
        managerListCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                managerListComboActionPerformed(evt);
            }
        });
        add(managerListCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 200, 145, -1));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(254, 254, 226));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel3.setText("Phone");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 230, 137, -1));

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(254, 254, 226));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel6.setText("Location");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 260, 137, 16));

        locationText.setForeground(new java.awt.Color(72, 72, 72));
        locationText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                locationTextActionPerformed(evt);
            }
        });
        add(locationText, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 260, 145, -1));

        phoneText.setForeground(new java.awt.Color(72, 72, 72));
        add(phoneText, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 230, 145, -1));

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(254, 254, 226));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel7.setText("Phone");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 260, 97, -1));

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(254, 254, 226));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel8.setText("Location");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 290, 129, -1));

        updatePhoneText.setForeground(new java.awt.Color(72, 72, 72));
        updatePhoneText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatePhoneTextActionPerformed(evt);
            }
        });
        add(updatePhoneText, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 260, 145, -1));

        updateLocationText.setForeground(new java.awt.Color(72, 72, 72));
        updateLocationText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateLocationTextActionPerformed(evt);
            }
        });
        add(updateLocationText, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 290, 145, -1));

        title.setBackground(new java.awt.Color(255, 51, 0));
        title.setFont(new java.awt.Font("Lucida Grande", 1, 24)); // NOI18N
        title.setForeground(new java.awt.Color(254, 254, 226));
        title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title.setText("Manage Grocery Store");
        add(title, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 50, 989, 58));
    }// </editor-fold>//GEN-END:initComponents

    private void deleteRestButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteRestButtonActionPerformed
        // TODO add your handling code here:
        boolean flag = false;

        String selectedItem = (String) restListCombo.getSelectedItem();
        restListCombo.getSelectedIndex();
        if(restListCombo.getSelectedItem() == null || restListCombo.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(null,"Select a value from dropdown of grocery to delete","Error message", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (flag == false) {
            Boolean isDelete = ecosystem.getGroceryDirectory().deleteGrocery(selectedItem);
            for (int i = 0; i < restaurantList.getRowCount(); i++) {
                if (((String) restaurantList.getValueAt(i, 0)).equals(selectedItem)) {
                    model.removeRow(i);
                    restListCombo.removeItemAt(i + 1);
                    updateRestListCombo.removeItemAt(i + 1);
                }//end of if block
            }
            if (isDelete) {
                System.out.println("Grocery deleted ....");
                JOptionPane.showMessageDialog(this, "Grocery deleted successfully");
            }
        }
        restListCombo.setSelectedIndex(0);
    }//GEN-LAST:event_deleteRestButtonActionPerformed

    private void restNameTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_restNameTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_restNameTextActionPerformed

    public GroceryManager getCurrent(String name) {
        for (int i = 0; i < ecosystem.getGroceryManagerDirectory().getGroceryManagerList().size(); i++) {
            if (ecosystem.getGroceryManagerDirectory().getGroceryManagerList().get(i).getName().equals(name)) {
                return ecosystem.getGroceryManagerDirectory().getGroceryManagerList().get(i);
            }
        }
        return null;
    }
    
    public Boolean validateFields(String address, String phone, String name) {
        if(phone.isEmpty() || name.isEmpty() || address.isEmpty()) {
            JOptionPane.showMessageDialog(null,"Fields cannot be empty","Error message", JOptionPane.ERROR_MESSAGE);
            return false;
        }else if(phone.length() != 10) {
            JOptionPane.showMessageDialog(null, "PhoneNumber must be of 10 digits","Error message", JOptionPane.ERROR_MESSAGE);
            return false;
        }else if(!phone.matches("^[0-9]+$")) {
            JOptionPane.showMessageDialog(null, "Phone Number must have digits only","Error message", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        return true;
    }
    
    private void addRestButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addRestButtonActionPerformed
        // TODO add your handling code here:
        if(managerListCombo.getSelectedItem() == null || managerListCombo.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(null,"Select a value from dropdown of grocery to update","Error message", JOptionPane.ERROR_MESSAGE);
            return;
        } else if (!validateFields(locationText.getText(), phoneText.getText(), restNameText.getText())) {
            return;
        }
        for (int i = 0; i < ecosystem.getGroceryDirectory().getGroceryList().size(); i++) {
            if(ecosystem.getGroceryDirectory().getGroceryList().get(i).getName() == null ? restNameText.getText() == null : ecosystem.getGroceryDirectory().getGroceryList().get(i).getName().equals(restNameText.getText())){
                JOptionPane.showMessageDialog(null,"grocery Already Present", "Error message" ,JOptionPane.ERROR_MESSAGE);
                return;
            }
        }
        String managerSelectedItem = (String) managerListCombo.getSelectedItem();
        
        String selectedItem = (String) restListCombo.getSelectedItem();
       
        GroceryManager rm = getCurrent(managerSelectedItem);
        ecosystem.getGroceryDirectory().createGrocery(restNameText.getText(), rm, phoneText.getText(), locationText.getText(), rm.getNetwork());
        System.out.println("Grocery Added ....");
        JOptionPane.showMessageDialog(this, "grocery added successfully");
        restListCombo.addItem(restNameText.getText());
        updateRestListCombo.addItem(restNameText.getText());

        model.addRow(new Object[]{
            restNameText.getText(),
            managerSelectedItem,
            locationText.getText(),
            phoneText.getText(),
            rm.getNetwork()
        });
        restNameText.setText("");        
        locationText.setText("");
        phoneText.setText("");

        managerListCombo.setSelectedItem(null);
    }//GEN-LAST:event_addRestButtonActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed

        GroceryMain dm= new GroceryMain(userProcessContainer, ecosystem);
        userProcessContainer.add("manageNetworkJPanel",dm);
        CardLayout layout=(CardLayout)userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void updateRestNameTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateRestNameTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_updateRestNameTextActionPerformed

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        // TODO add your handling code here:
        String managerSelectedItem = (String) updateManagerListCombo.getSelectedItem();
        GroceryManager rm = getCurrent(managerSelectedItem);
        boolean flag = false;

        String selectedItem = (String) updateRestListCombo.getSelectedItem();
        restListCombo.getSelectedIndex();
        if(updateRestListCombo.getSelectedItem() == null || updateRestListCombo.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(null,"Select a value from dropdown of grocery to update","Error message", JOptionPane.ERROR_MESSAGE);
            return;
        } else if (!validateFields(updateLocationText.getText(), updatePhoneText.getText(), updateRestNameText.getText())) {
            return;
        }
        if(updateManagerListCombo.getSelectedItem() == null || updateManagerListCombo.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(null,"Select a value from manager dropdown of grocery to update","Error message", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (flag == false) {
//            Boolean isDelete = ecosystem.getRestaurantDirectory().deleteRestaurant(selectedItem);
            for (int i = 0; i < ecosystem.getGroceryDirectory().getGroceryList().size(); i++) {
                if (ecosystem.getGroceryDirectory().getGroceryList().get(i).getName().equals(selectedItem)) {
                    ecosystem.getGroceryDirectory().getGroceryList().get(i).setName(updateRestNameText.getText());
                    ecosystem.getGroceryDirectory().getGroceryList().get(i).setLocation(updateLocationText.getText());
                    ecosystem.getGroceryDirectory().getGroceryList().get(i).setPhone(updatePhoneText.getText());
                    ecosystem.getGroceryDirectory().getGroceryList().get(i).setManagerDetails(rm);
                }
            }
        }

        for (int i = 0; i < restaurantList.getRowCount(); i++) {
            if (((String) restaurantList.getValueAt(i, 0)).equals(selectedItem)) {
                restListCombo.addItem(updateRestNameText.getText());
                model.addRow(new Object[]{
                    updateRestNameText.getText(),
                    managerSelectedItem,
                    updateLocationText.getText(),
                    updatePhoneText.getText(),
                    "Boston"
                });
                model.removeRow(i);
                restListCombo.removeItemAt(i + 1);
            }//end of if block
        }
        System.out.println("Grocery Updated ....");
        resetUpdate();
    }//GEN-LAST:event_updateBtnActionPerformed

    private void updateRestListComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateRestListComboActionPerformed
        // TODO add your handling code here:
        if (updateRestListCombo.getSelectedItem() != "None") {
            String selectedItem = (String) updateRestListCombo.getSelectedItem();
            for (int i = 0; i < ecosystem.getGroceryDirectory().getGroceryList().size(); i++) {
                if (ecosystem.getGroceryDirectory().getGroceryList().get(i).getName().equalsIgnoreCase(selectedItem)) {
                    updateRestNameText.setText(ecosystem.getGroceryDirectory().getGroceryList().get(i).getName());
                    updateLocationText.setText(ecosystem.getGroceryDirectory().getGroceryList().get(i).getLocation());
                    updatePhoneText.setText(ecosystem.getGroceryDirectory().getGroceryList().get(i).getPhone());
                    updateManagerListCombo.setSelectedItem(ecosystem.getGroceryDirectory().getGroceryList().get(i).getManager());
                    break;
                }
            }
        }else{
            updateRestNameText.setText("");
            updateLocationText.setText("");
            updatePhoneText.setText("");
            updateManagerListCombo.setSelectedItem(null);
        }
    }//GEN-LAST:event_updateRestListComboActionPerformed

    private void updatePhoneTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatePhoneTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_updatePhoneTextActionPerformed

    private void updateLocationTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateLocationTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_updateLocationTextActionPerformed

    private void locationTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_locationTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_locationTextActionPerformed

    private void restListComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_restListComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_restListComboActionPerformed

    private void managerListComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_managerListComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_managerListComboActionPerformed

    private void updateManagerListComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateManagerListComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_updateManagerListComboActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addRestButton;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton deleteRestButton;
    private javax.swing.JLabel deleteRestLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField locationText;
    private javax.swing.JComboBox<String> managerListCombo;
    private javax.swing.JTextField phoneText;
    private javax.swing.JComboBox<String> restListCombo;
    private javax.swing.JLabel restNameLabel;
    private javax.swing.JLabel restNameLabel1;
    private javax.swing.JTextField restNameText;
    private javax.swing.JTable restaurantList;
    private javax.swing.JLabel selectManagerLabel;
    private javax.swing.JLabel title;
    private javax.swing.JButton updateBtn;
    private javax.swing.JTextField updateLocationText;
    private javax.swing.JComboBox<String> updateManagerListCombo;
    private javax.swing.JTextField updatePhoneText;
    private javax.swing.JComboBox<String> updateRestListCombo;
    private javax.swing.JLabel updateRestManagerLabel;
    private javax.swing.JLabel updateRestManagerLabel1;
    private javax.swing.JTextField updateRestNameText;
    // End of variables declaration//GEN-END:variables
}
